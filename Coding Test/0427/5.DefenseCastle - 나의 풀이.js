/*
[문제 설명]
 당신은 성을 지키기 위한 디펜스 게임을 진행합니다. 적군들은 총 `n`명입니다.
 `time`의 시간 동안 `distance`의 거리를 적군들이 이동합니다.
 1초마다 수비군은 1개씩 생성되며 성에 도착한 적군 1명을 아군 1명이 수비할 수 있습니다.
 수비군보다 성에 도착한 적군이 많으면 -1을 출력하고,
 그렇지 않다면 최종 적을 수비한 후의 수비군 수를 출력하는 함수, solution을 완성해주세요.

 예를 들어, distance [1,2,8]와 time [1,1,2] 가 주어질 때 예시는 다음과 같습니다.
 > 적군의 속력 [1,2,4]
 > 0 라운드 : 아군 0명, 적군 0명 => (전쟁 결과) 아군 0명, 적군 0명
 > 1 라운드 : 아군 1명, 적군 1명 => (전쟁 결과) 아군 0명, 적군 0명
 > 2 라운드 : 아군 2명, 적군 2명 => (전쟁 결과) 아군 0명, 적군 0명
 > 3 라운드 : 아군 3명, 적군 2명 => (전쟁 결과) 아군 1명, 적군 0명
 > 4 라운드 : 아군 4명, 적군 3명 => (전쟁 결과) 아군 1명, 적군 0명
 > 결과 1

 distance [2,2,3,6]와 time [1,1,1,2] 가 주어질 때 예시는 다음과 같습니다.
 > 적군의 속력 [2,2,3,3]
 > 0 라운드 : 아군 0명, 적군 0명 => (전쟁 결과) 아군 0명, 적군 0명
 > 1 라운드 : 아군 1명, 적군 0명 => (전쟁 결과) 아군 1명, 적군 0명
 > 2 라운드 : 아군 2명, 적군 2명 => (전쟁 결과) 아군 0명, 적군 0명
 > 3 라운드 : 아군 3명, 적군 4명 => (전쟁 결과) 아군 0명, 적군 1명
 > 결과 -1

[제한 사항]
 - 수비군보다 성에 도착한 적군이 많으면 당신은 패배하여 -1을 출력합니다.
 - 한 라운드마다 성을 디펜스 할 수 있는 아군이 생성됩니다.
 - 1 속력(거리 / 시간) 내에 적군이 성에 도착하면, 적군은 성을 공격할 수 있습니다.

[입력 형식]
 - 각 적군의 거리 distance는 길이가 n인 1 이상 100 이하의 배열입니다.
 - 각 적군의 움직이는 시간 time은 길이가 n인 1 이상 100 이하의 배열입니다.
 - distance와 time은 1 이상 1000 이하의 정수로 이루어져 있습니다.

[출력 형식]
 - 적을 수비한 후 수비군 수를 출력합니다. 수비 하지 못한 경우 -1을 출력합니다.
*/

// 예시를 보고 풀긴 풀었는데 아직도 문제 이해가 안됨...
// time 대신 velocity를 제공하고 time을 계산해서 풀어야 하는 문제 아닌지..?
// '1 속력 내에 적군이 성에 도착한다'는게 도대체 무슨뜻인지..
// 도대체 '속력'이 적군이 도착하는 '시간'과 어떻게 일치할 수 있는지..?

function solution(distance, time) {
  let n = distance.length;

  // 적군의 속력(거리/시간)을 계산해서 velocity 배열에 저장
  let velocity = [];
  for (let i = 0; i < n; i++) {
    velocity[i] = Math.floor(distance[i] / time[i]);
  }

  // 적군의 속력을 오름차순으로 정렬
  // (아니 그러면 느린 애들이 먼저 공격한다는 건데.. 속력이랑 시간의 개념을 헷갈린건가..?)
  velocity.sort((a, b) => a - b);

  // 아군의 수를 저장할 변수
  let defense = 0;

  // 1초부터 마지막 적군이 오는 순간까지 시간을 1씩 늘려가며 생각
  for (let i = 1; i <= Math.max(...velocity); i++) {
    // 1초마다 아군 1개씩 생성
    defense++;
    // i초에 성에 도착하는 적군의 수를 계산해서 아군 수에서 빼줌
    defense -= velocity.filter((e) => e === i).length;
    // 아군보다 적군이 많아지는 순간 패배
    if (defense < 0) return -1;
  }
  // 마지막 적군이 온 후에도 패배하지 않았다면 남은 아군 수 반환
  return defense;
}

// 점수: 1.0/1.0
