/*
[문제 설명]
1번부터 N번까지의 사람이 동그랗게 모여있습니다.
1번 부터 순서를 세어 K번째 사람을 모임에서 제외시킵니다.
남은 N-1명에서 제외된 다음 사람부터 원을따라 다시 순서를 세서
K번째 사람을 모임에서 제외하는 과정을 마지막 사람이 남을때까지 반복합니다.

이때 마지막으로 남는 사람의 번호를 구하는 함수를 작성하세요.
 
예를 들어 N이 7, K가 3인 경우
1, 2, 3, 4, 5, 6, 7 번의 사람이 있고 순서대로 3, 6, 2, 7, 5, 1 번이 제외되어
최종 4번이 마지막으로 남는 사람입니다.
 
[입력]
참여 인원 N, 건너뛰는 횟수 K
 
[출력]
마지막 남은 사람 번호
*/

function solution(N, K) {
  // 크기가 N인 배열 생성 및 초기화
  // arr: [1, 2, 3, ..., N-1, N]
  let arr = Array.from({ length: N }, (v, i) => i + 1);
  // 순서를 세기 시작할 인덱스를 저장할 변수
  let start = 0;
  // 한 사람만 남을 때까지 반복
  while (arr.length > 1) {
    // 제외시킬 사람의 인덱스
    let newK = start + K - 1;
    // 인덱스가 배열을 넘어갈 경우
    if (newK >= arr.length) newK = newK % arr.length;
    // 한 사람을 모임에서 제외
    arr.splice(newK, 1);
    // 다음 턴에 제외된 다음 사람부터 순서를 세기 시작
    start = newK;
  }
  return arr[0];
}

// 점수: 1.0/1.0
