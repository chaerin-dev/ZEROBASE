/*
병원에서 진료를 위해 예약 환자가 대기 중입니다. arr는 진료를 위해 대기 중인 환자들의 진료 부위 수를 나타냅니다.
병원에는 n개만큼의 진료소가 있고, 1개의 진료 부위를 진료하는 데 1분이 소요된다고 가정합니다.
이때 예약 환자가 모두 진료받는 데 걸리는 시간 분을 구하는 함수, solution을 완성해주세요.
예를 들어, arr [1, 1, 1, 2, 2, 1, 1]가 있고, n이 3일 때, 모두 진료받는 시간은 6분입니다.
> 0분에 진료소 [-, -, -] 전부 비어있고, arr는 [1, 1, 1, 2, 2, 1, 1]입니다.
> 1분에 진료소 [1, 1, 1] 진료 부위가 남고, arr는 [2, 2, 1, 1]입니다.
> 2분에 진료소 [-, -, -] 전부 비어있고, arr는 [2, 2, 1, 1]입니다.
> 3분에 진료소 [2, 2, 1] 진료 부위가 남고, arr는 [1]입니다.
> 4분에 진료소 [1, 1, -] 3 진료소가 비어있고, arr는 [1]입니다.
> 5분에 진료소 [-, -, 1] 진료 부위가 남고, arr는 [] 입니다.
> 6분에 모든 진료가 끝납니다.
*/

function solution(arr, n) {
  // 진료소별로 환자를 진료하는 데 걸리는 시간(환자 이동 시간 포함)의 합을 저장할 배열 rooms
  let rooms = [];
  // 각 진료소별로 환자를 진료하는 데 걸리는 시간을 0으로 초기화
  for (let i = 0; i < n; i++) {
    rooms.push(0);
  }

  // 손님을 차례로 값이 가장 적은 진료소에 넣어줌
  for (let ppl of arr) {
    let min_num = Math.min(...rooms);
    for (let i = 0; i < rooms.length; i++) {
      if (rooms[i] == min_num) {
        // 환자 이동 시간까지 포함하므로 ppl이 아닌 ppl + 1을 더해줌
        rooms[i] += ppl + 1;
        break;
      }
    }
  }

  // 모든 진료가 끝나는 시간은 가장 늦게까지 진료가 진행되는 진료소의 진료가 끝나는 시간!
  return Math.max(...rooms);
}

// 이동에 1분이 소요된다는 조건을 제대로 확인하지 못해서 시간을 많이 낭비한 문제..
// 모든 조건을 꼼꼼히 확인하는 습관을 갖자!
