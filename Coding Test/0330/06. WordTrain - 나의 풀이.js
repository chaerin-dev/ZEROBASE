/*
[문제 설명]
 전 세계의 알파벳들이 기차놀이를 하기 위해서 한 장소에 모였습니다.
 뒤죽박죽 같은 스펠링의 알파벳들도 섞여 들어가 있습니다.
 여기에서 반복 없이 가장 긴 알파벳 길이를 구하는 함수, solution을 완성해주세요.

 예를 들어, 문자열 s가 `abssccbsbsv` 일 때, 반복 없이 가장 긴 알파벳 길이는 3입니다.

[제한 사항]
 - 기차놀이의 참가한 알파벳은 중복될 수 있습니다.
 - 반복 없는 가장 긴 문자열을 찾습니다.

[입력 형식]
 - s는 길이가 1 이상 1,000 이하인 문자열입니다.

[출력 형식]
 - 반복 없이 가장 긴 알파벳 길이를 출력합니다.
*/

// 이중 for문을 이용해
// 0 인덱스부터 반복 없이 가장 긴 알파벳의 길이,
// 1 인덱스부터 반복 없이 가장 긴 알파벳의 길이,
// ...
// 마지막 인덱스부터 반복 없이 가장 긴 알파벳의 길이 중 최댓값을 구함

function solution(s) {
  // 반복 없이 가장 긴 알파벳 길이를 저장할 변수
  length = 0;
  // i 인덱스부터 시작해서
  for (let i = 0; i < s.length; i++) {
    // 반복 없이 가장 긴 알파벳 문자열을 저장할 변수
    let temp = s[i];
    // j 인덱스를 1씩 늘려가다가
    for (let j = i + 1; j < s.length; j++) {
      // 만약 j인덱스의 값이 i 인덱스부터 j-1 인덱스까지에 포함되면
      if (temp.includes(s[j])) {
        // temp.length는 i인덱스부터 반복없이 가장 긴 알파벳의 길이!
        // length 갱신
        length = Math.max(length, temp.length);
        break;
      }
      // 만약 j인덱스의 값이 i 인덱스부터 j-1 인덱스까지에 포함되지 않으면
      // 해당 문자를 반복 없이 가장 긴 알파벳 문자열에 추가
      temp += s[j];
    }
  }
  return length;
}

// 점수: 1.0/1.0
